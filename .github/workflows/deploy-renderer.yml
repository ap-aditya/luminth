# name: Deploy Rendering Service to Cloud Run
# on:
#   push:
#     branches:
#       - main 
#     paths:
#       - 'apps/rendering-service/**'
#       - 'libs/**'

# env:
#   GCP_REGION: us-central1
#   ARTIFACT_REPO: luminth-services
#   SERVICE_NAME: rendering-service 
#   JOB_NAME: rendering-service-job

# jobs:
#   build-and-deploy:
#     name: Build and Deploy to Cloud Run
#     runs-on: ubuntu-latest
#     permissions:
#       contents: 'read'
#       id-token: 'write'

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Authenticate to Google Cloud
#         id: auth
#         uses: google-github-actions/auth@v2
#         with:
#           workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
#           service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Configure Docker
#         run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

#       - name: Build and Push Docker Image
#         id: build
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: ./apps/${{ env.SERVICE_NAME }}/Dockerfile
#           push: true
#           tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:latest
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#       - name: Deploy to Cloud Run Jobs
#         id: deploy
#         uses: google-github-actions/deploy-run@v2
#         with:
#           service: ${{ env.JOB_NAME }}
#           region: ${{ env.GCP_REGION }}
#           image: ${{ steps.build.outputs.digest }}
#           is_job: true

#           job_task_timeout: 900s 
#           job_cpu: 2
#           job_memory: 4Gi 

#           vpc_egress: all-traffic

#           env_vars: |
#             DROPBOX_APP_KEY=${{ secrets.DROPBOX_APP_KEY }}
#             DROPBOX_APP_SECRET=${{ secrets.DROPBOX_APP_SECRET }}
#             DROPBOX_REFRESH_TOKEN=${{ secrets.DROPBOX_REFRESH_TOKEN }}
#             REDIS_HOST=${{ secrets.REDIS_HOST_PROD }}
#             REDIS_PORT=${{ secrets.REDIS_PORT }}
#             REDIS_CHANNEL=${{ secrets.REDIS_CHANNEL }}

